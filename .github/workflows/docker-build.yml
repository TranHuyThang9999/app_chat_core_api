name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build-test:
    runs-on: ubuntu-latest
    name: Docker Build and Integration Test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image for testing
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: payment-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Start services for integration test
      run: |
        docker-compose -f docker-compose.ci.yml up -d postgres minio
        sleep 30

    - name: Run database migrations
      run: |
        docker run --rm --network payment-core-service-api_payment-network \
          -e ConnectionStrings__DefaultConnection="Host=postgres;Database=paymentcoredb;Username=postgres;Password=postgres" \
          payment-api:test \
          dotnet ef database update

    - name: Run integration tests
      run: |
        docker-compose -f docker-compose.ci.yml up -d app
        sleep 30
        
        # Health check
        curl -f http://localhost:8080/health || exit 1
        
        # API tests
        curl -f http://localhost:8080/api/auth/health || echo "Auth endpoint check"

    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.ci.yml down -v
        docker system prune -f

  vulnerability-scan:
    runs-on: ubuntu-latest
    name: Container Security Scan
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Build image for scanning
      run: docker build -t payment-api:scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'payment-api:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'